{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "Vaadin",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "src/vaadin-overlay.html",
        "start": {
          "line": 664,
          "column": 4
        },
        "end": {
          "line": 664,
          "column": 40
        }
      },
      "elements": [
        {
          "description": "`<vaadin-overlay>` is a Polymer 2 element for creating overlays.\n\n```html\n<vaadin-overlay>\n  <template>Overlay content</template>\n</vaadin-overlay>\n```\n\n### Templating\n\nBy default, the overlay finds the child template and uses that.\nYou can also set a custom template using the `template` property.\n\nAfter the content from the template is stamped, the `content` property\npoints to the content container.\n\nThe overlay provides `forwardHostProp` when calling\n`Polymer.Templatize.templatize` for the template, so that the bindings\nfrom the parent scope propagate to the content.  You can also pass\ncustom `instanceProps` object using the `instanceProps` property.\n\nNote when using `instanceProps`: because of the Polymer limitation,\nevery template can only be templatized once, so it is important\nto set `instanceProps` before the `template` is assigned to the overlay.\n\n### Styling\n\nTo style the overlay content, use styles in the parent scope:\n\n- If the overlay is used in a component, then the component styles\n  apply the overlay content.\n- If the overlay is used in the global DOM scope, then global styles\n  apply to the overlay content.\n\nSee examples for styling the overlay content in the live demos.\n\nThe following Shadow DOM parts are available for styling the overlay component itself:\n\nPart name  | Description\n-----------|---------------------------------------------------------|\n`backdrop` | Backdrop of the overlay\n`overlay`  | Container for position/sizing/alignment of the content\n`content`  | Content of the overlay\n\nThe following state attributes are available for styling:\n\nAttribute | Description | Part\n---|---|---\n`opening` | Applied just after the overlay is attached to the DOM. You can apply a CSS @keyframe animation for this state. | `:host`\n`closing` | Applied just before the overlay is detached from the DOM. You can apply a CSS @keyframe animation for this state. | `:host`\n\nThe following custom CSS properties are available for styling:\n\nCustom CSS property | Description | Default value\n---|---|---\n`--vaadin-overlay-viewport-bottom` | Bottom offset of the visible viewport area | `0` or detected offset\n\nSee [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)",
          "summary": "",
          "path": "src/vaadin-overlay.html",
          "properties": [
            {
              "name": "opened",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 166,
                  "column": 10
                },
                "end": {
                  "line": 170,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              }
            },
            {
              "name": "template",
              "type": "Object",
              "description": "The template of the overlay content.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 175,
                  "column": 10
                },
                "end": {
                  "line": 178,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              }
            },
            {
              "name": "instanceProps",
              "type": "Object",
              "description": "Optional argument for `Polymer.Templatize.templatize`.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 183,
                  "column": 10
                },
                "end": {
                  "line": 185,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "content",
              "type": "Object",
              "description": "References the content container after the template is stamped.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 190,
                  "column": 10
                },
                "end": {
                  "line": 193,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true
                }
              }
            },
            {
              "name": "withBackdrop",
              "type": "boolean",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 195,
                  "column": 10
                },
                "end": {
                  "line": 199,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "modeless",
              "type": "boolean",
              "description": "When true the overlay won't disable the main content, showing\nit doesn’t change the functionality of the user interface.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 205,
                  "column": 10
                },
                "end": {
                  "line": 210,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_modelessChanged\""
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "focusTrap",
              "type": "boolean",
              "description": "When true move focus to the first focusable element in the overlay,\nor to the overlay if there are no focusable elements.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 216,
                  "column": 10
                },
                "end": {
                  "line": 219,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              },
              "defaultValue": "false"
            },
            {
              "name": "_mouseDownInside",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 221,
                  "column": 10
                },
                "end": {
                  "line": 223,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_mouseUpInside",
              "type": "boolean",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 225,
                  "column": 10
                },
                "end": {
                  "line": 227,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_instance",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 229,
                  "column": 10
                },
                "end": {
                  "line": 231,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_boundIronOverlayCanceledListener",
              "type": "Object",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 233,
                  "column": 10
                },
                "end": {
                  "line": 235,
                  "column": 11
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_shadyStyleScope",
              "type": "string",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 237,
                  "column": 10
                },
                "end": {
                  "line": 237,
                  "column": 34
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_contentNodes",
              "type": "Array",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 239,
                  "column": 10
                },
                "end": {
                  "line": 239,
                  "column": 30
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 272,
                  "column": 6
                },
                "end": {
                  "line": 283,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_detectIosNavbar",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 285,
                  "column": 6
                },
                "end": {
                  "line": 302,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_setTemplateFromNodes",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 304,
                  "column": 6
                },
                "end": {
                  "line": 306,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "nodes"
                }
              ]
            },
            {
              "name": "close",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 312,
                  "column": 6
                },
                "end": {
                  "line": 318,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "sourceEvent"
                }
              ]
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 320,
                  "column": 6
                },
                "end": {
                  "line": 331,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 333,
                  "column": 6
                },
                "end": {
                  "line": 349,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_mouseDownListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 351,
                  "column": 6
                },
                "end": {
                  "line": 353,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_mouseUpListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 355,
                  "column": 6
                },
                "end": {
                  "line": 357,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_outsideClickListener",
              "description": "We need to listen on 'click' / 'tap' event and capture it and close the overlay before\npropagating the event to the listener in the button. Otherwise, if the clicked button would call\nopen(), this would happen: https://www.youtube.com/watch?v=Z86V_ICUCD4",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 367,
                  "column": 6
                },
                "end": {
                  "line": 384,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_keydownListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 390,
                  "column": 6
                },
                "end": {
                  "line": 411,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "name": "_openedChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 417,
                  "column": 6
                },
                "end": {
                  "line": 437,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "opened"
                }
              ]
            },
            {
              "name": "_animatedOpening",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 439,
                  "column": 6
                },
                "end": {
                  "line": 452,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_attachOverlay",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 454,
                  "column": 6
                },
                "end": {
                  "line": 458,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_animatedClosing",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 460,
                  "column": 6
                },
                "end": {
                  "line": 476,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_detachOverlay",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 478,
                  "column": 6
                },
                "end": {
                  "line": 482,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_modelessChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 491,
                  "column": 6
                },
                "end": {
                  "line": 499,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "modeless"
                }
              ]
            },
            {
              "name": "_enterModalState",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 501,
                  "column": 6
                },
                "end": {
                  "line": 513,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_exitModalState",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 515,
                  "column": 6
                },
                "end": {
                  "line": 526,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_removeOldContent",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 528,
                  "column": 6
                },
                "end": {
                  "line": 550,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_templateChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 552,
                  "column": 6
                },
                "end": {
                  "line": 616,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "template"
                }
              ]
            },
            {
              "name": "_isFocused",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 618,
                  "column": 6
                },
                "end": {
                  "line": 620,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "element"
                }
              ]
            },
            {
              "name": "_focusedIndex",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 622,
                  "column": 6
                },
                "end": {
                  "line": 625,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "elements"
                }
              ]
            },
            {
              "name": "_cycleTab",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 627,
                  "column": 6
                },
                "end": {
                  "line": 645,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "increment"
                },
                {
                  "name": "index"
                }
              ]
            },
            {
              "name": "_getFocusableElements",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 647,
                  "column": 6
                },
                "end": {
                  "line": 650,
                  "column": 7
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_processPendingMutationObserversFor",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 652,
                  "column": 6
                },
                "end": {
                  "line": 656,
                  "column": 7
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node"
                }
              ]
            }
          ],
          "staticMethods": [
            {
              "name": "_includeStyle",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "file": "../bower_components/vaadin-themable-mixin/vaadin-themable-mixin.html",
                "start": {
                  "line": 46,
                  "column": 4
                },
                "end": {
                  "line": 50,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "moduleName"
                }
              ],
              "inheritedFrom": "Vaadin.ThemableMixin"
            }
          ],
          "demos": [
            {
              "url": "demo/index.html",
              "description": ""
            }
          ],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 657,
              "column": 5
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.OverlayElement",
          "attributes": [
            {
              "name": "opened",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 166,
                  "column": 10
                },
                "end": {
                  "line": 170,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "template",
              "description": "The template of the overlay content.",
              "sourceRange": {
                "start": {
                  "line": 175,
                  "column": 10
                },
                "end": {
                  "line": 178,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "Object"
            },
            {
              "name": "instance-props",
              "description": "Optional argument for `Polymer.Templatize.templatize`.",
              "sourceRange": {
                "start": {
                  "line": 183,
                  "column": 10
                },
                "end": {
                  "line": 185,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "Object"
            },
            {
              "name": "content",
              "description": "References the content container after the template is stamped.",
              "sourceRange": {
                "start": {
                  "line": 190,
                  "column": 10
                },
                "end": {
                  "line": 193,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "Object"
            },
            {
              "name": "with-backdrop",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 195,
                  "column": 10
                },
                "end": {
                  "line": 199,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "modeless",
              "description": "When true the overlay won't disable the main content, showing\nit doesn’t change the functionality of the user interface.",
              "sourceRange": {
                "start": {
                  "line": 205,
                  "column": 10
                },
                "end": {
                  "line": 210,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean"
            },
            {
              "name": "focus-trap",
              "description": "When true move focus to the first focusable element in the overlay,\nor to the overlay if there are no focusable elements.",
              "sourceRange": {
                "start": {
                  "line": 216,
                  "column": 10
                },
                "end": {
                  "line": 219,
                  "column": 11
                }
              },
              "metadata": {},
              "type": "boolean"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "vaadin-overlay-close",
              "description": "vaadin-overlay-close\nfired before the `vaadin-overlay` will be closed. If canceled the closing of the overlay is canceled as well.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "vaadin-overlay-escape-press",
              "description": "vaadin-overlay-escape-press\nfired before the `vaadin-overlay` will be closed on ESC button press. If canceled the closing of the overlay is canceled as well.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "vaadin-overlay-open",
              "description": "vaadin-overlay-open\nfired after the `vaadin-overlay` is opened.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "vaadin-overlay-outside-click",
              "description": "vaadin-overlay-outside-click\nfired before the `vaadin-overlay` will be closed on outside click. If canceled the closing of the overlay is canceled as well.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "opened-changed",
              "description": "Fired when the `opened` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "template-changed",
              "description": "Fired when the `template` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "content-changed",
              "description": "Fired when the `content` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [
            {
              "description": "",
              "name": "",
              "range": {
                "file": "src/vaadin-overlay.html",
                "start": {
                  "line": 87,
                  "column": 8
                },
                "end": {
                  "line": 87,
                  "column": 21
                }
              }
            }
          ],
          "tagname": "vaadin-overlay",
          "mixins": [
            "Vaadin.ThemableMixin"
          ]
        }
      ]
    }
  ]
}
